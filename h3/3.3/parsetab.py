
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightNOTleftTIMESDIVIDEleftPLUSMINUSleftANDleftORAND BOOLEAN DIVIDE LPAREN MINUS NOT NUMBER OR PLUS RPAREN TIMESexpr : expr PLUS term\n           | expr MINUS term\n           | termterm : term TIMES factor\n           | term DIVIDE factor\n           | factorfactor : NUMBER\n              | LPAREN expr RPAREN\n              | expr_logicaexpr_logica : expr_logica OR term_logicaexpr_logica : expr_logica AND term_logicaexpr_logica : term_logicaterm_logica : NOT factor_logicoterm_logica : factor_logicofactor_logico : BOOLEAN\n                    | NUMBER\n                    | LPAREN expr_logica RPAREN'
    
_lr_action_items = {'NUMBER':([0,5,8,11,12,13,14,17,18,21,],[4,4,20,4,4,4,4,20,20,20,]),'LPAREN':([0,5,8,11,12,13,14,17,18,21,],[5,5,21,5,5,5,5,21,21,21,]),'NOT':([0,5,11,12,13,14,17,18,21,],[8,8,8,8,8,8,8,8,8,]),'BOOLEAN':([0,5,8,11,12,13,14,17,18,21,],[10,10,10,10,10,10,10,10,10,10,]),'$end':([1,2,3,4,6,7,9,10,19,20,22,23,24,25,26,27,28,29,],[0,-3,-6,-7,-9,-12,-14,-15,-13,-16,-1,-2,-4,-5,-8,-17,-10,-11,]),'PLUS':([1,2,3,4,6,7,9,10,15,16,19,20,22,23,24,25,26,27,28,29,],[11,-3,-6,-7,-9,-12,-14,-15,11,-9,-13,-16,-1,-2,-4,-5,-8,-17,-10,-11,]),'MINUS':([1,2,3,4,6,7,9,10,15,16,19,20,22,23,24,25,26,27,28,29,],[12,-3,-6,-7,-9,-12,-14,-15,12,-9,-13,-16,-1,-2,-4,-5,-8,-17,-10,-11,]),'RPAREN':([2,3,4,6,7,9,10,15,16,19,20,22,23,24,25,26,27,28,29,30,],[-3,-6,-7,-9,-12,-14,-15,26,27,-13,-16,-1,-2,-4,-5,-8,-17,-10,-11,27,]),'TIMES':([2,3,4,6,7,9,10,16,19,20,22,23,24,25,26,27,28,29,],[13,-6,-7,-9,-12,-14,-15,-9,-13,-16,13,13,-4,-5,-8,-17,-10,-11,]),'DIVIDE':([2,3,4,6,7,9,10,16,19,20,22,23,24,25,26,27,28,29,],[14,-6,-7,-9,-12,-14,-15,-9,-13,-16,14,14,-4,-5,-8,-17,-10,-11,]),'OR':([4,6,7,9,10,16,19,20,27,28,29,30,],[-16,17,-12,-14,-15,17,-13,-16,-17,-10,-11,17,]),'AND':([4,6,7,9,10,16,19,20,27,28,29,30,],[-16,18,-12,-14,-15,18,-13,-16,-17,-10,-11,18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expr':([0,5,],[1,15,]),'term':([0,5,11,12,],[2,2,22,23,]),'factor':([0,5,11,12,13,14,],[3,3,3,3,24,25,]),'expr_logica':([0,5,11,12,13,14,21,],[6,16,6,6,6,6,30,]),'term_logica':([0,5,11,12,13,14,17,18,21,],[7,7,7,7,7,7,28,29,7,]),'factor_logico':([0,5,8,11,12,13,14,17,18,21,],[9,9,19,9,9,9,9,9,9,9,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expr","S'",1,None,None,None),
  ('expr -> expr PLUS term','expr',3,'p_expr_arit','complejo_validador.py',67),
  ('expr -> expr MINUS term','expr',3,'p_expr_arit','complejo_validador.py',68),
  ('expr -> term','expr',1,'p_expr_arit','complejo_validador.py',69),
  ('term -> term TIMES factor','term',3,'p_term','complejo_validador.py',73),
  ('term -> term DIVIDE factor','term',3,'p_term','complejo_validador.py',74),
  ('term -> factor','term',1,'p_term','complejo_validador.py',75),
  ('factor -> NUMBER','factor',1,'p_factor','complejo_validador.py',79),
  ('factor -> LPAREN expr RPAREN','factor',3,'p_factor','complejo_validador.py',80),
  ('factor -> expr_logica','factor',1,'p_factor','complejo_validador.py',81),
  ('expr_logica -> expr_logica OR term_logica','expr_logica',3,'p_expr_logica_or','complejo_validador.py',86),
  ('expr_logica -> expr_logica AND term_logica','expr_logica',3,'p_expr_logica_and','complejo_validador.py',90),
  ('expr_logica -> term_logica','expr_logica',1,'p_expr_logica_term','complejo_validador.py',94),
  ('term_logica -> NOT factor_logico','term_logica',2,'p_term_logica_not','complejo_validador.py',98),
  ('term_logica -> factor_logico','term_logica',1,'p_term_logica_factor','complejo_validador.py',102),
  ('factor_logico -> BOOLEAN','factor_logico',1,'p_factor_logico','complejo_validador.py',106),
  ('factor_logico -> NUMBER','factor_logico',1,'p_factor_logico','complejo_validador.py',107),
  ('factor_logico -> LPAREN expr_logica RPAREN','factor_logico',3,'p_factor_logico','complejo_validador.py',108),
]
